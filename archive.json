{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-07-10T00:45:24.169042+00:00",
  "repo": "hbs-guidance/draft-hbs-state",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOLPgbFM6BMyU3",
      "title": "Consider section on acceptable usage scenarios?",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/2",
      "state": "CLOSED",
      "author": "cipherboy",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The introduction currently contains broad language around the desirable properties of these category of algorithms:\r\n\r\n> Their theoretic security is well understood and depends only on the security of the underlying hash function.  As such, they can serve as an important building block for quantum-resistant information and communication technology.\r\n\r\nI think it'd benefit the broader community (especially, protocol authors looking at adding PQC into their protocols) if some of this latter phrase (\"_important building block_\") could be expanded upon, perhaps enumerating some scenarios in which these trade offs are acceptable.\r\n\r\nE.g., perhaps in the scenario where potential theoretical weakness in the design of SLH-DSA or ML-DSA are an unacceptable risk to an organization (but still desires PQC security), S-HBS schemes could be considered?",
      "createdAt": "2024-03-04T19:43:46Z",
      "updatedAt": "2024-09-24T12:16:52Z",
      "closedAt": "2024-09-24T12:16:52Z",
      "comments": [
        {
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "body": "This is something that we should have a discussion about. I think that it might make sense that we recommend some evaluation criteria even, i.e., S-HBS might be appropriate IF you can't use SLH-DSA, ML-DSA, can predict the number of signatures before hand, ...\r\n\r\n>E.g., perhaps in the scenario where potential theoretical weakness in the design of SLH-DSA \r\n\r\nJust quickly noting that SPHINCS+ is basically an improved XMSS (in more ways than state) (in fact, XMSS even included in the SPHINCS+ specification!), so any attack that applies to SLH-DSA will likely apply to XMSS.\r\n",
          "createdAt": "2024-03-04T19:48:38Z",
          "updatedAt": "2024-03-04T19:48:38Z"
        },
        {
          "author": "cipherboy",
          "authorAssociation": "NONE",
          "body": "> Just quickly noting that SPHINCS+ is basically an improved XMSS (in more ways than state) (in fact, XMSS even included in the SPHINCS+ specification!), so any attack that applies to SLH-DSA will likely apply to XMSS.\r\n\r\nAhhh, yes, this is true. I think that then strengthens the question, in what scenarios _would_ you prefer this set of algorithms? :-) \r\n\r\nE.g., in what scenario would you be able to use S-HBS, if you can't use SLH-DSA? The parties had the former available but not the latter due to (artificially) constrained supply of algorithms? \r\n\r\nEphemeral signing keys (like with [sigstore](https://docs.sigstore.dev/signing/overview/)) would perhaps be one valid use case under that scenario (artificially restricted algorithms)... _with the caveat_ that ML-DSA would likely still be more performant and overall better, assuming resources to support both were present.",
          "createdAt": "2024-03-04T19:59:30Z",
          "updatedAt": "2024-03-04T21:31:55Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOLPgbFM6ZiuRp",
      "title": "Write out S-HBS as stateful HBS?",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/9",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "> On 1 okt 2024, at 08:21 Brockhaus, Hendrik wrote:\r\n> \r\n> I see the shortcut \u201eS-HBS\u201d. I know that you refer to \u201cstateful HBS\u201d. But others could confuse it with \u201cstateless HBS\u201d.\r\n> Is this abbreviation used elsewhere, e.g., at NIST or NSA? If it is only used here, I would propose to change it to \u201cstateful HBS\u201d.\r\n>  \r\n> Hendrik\r\n\r\nPreviously, other drafts appear to have used S-HBS, including https://datatracker.ietf.org/doc/draft-ietf-lamps-x509-shbs/, but we can consider changing it like that draft did. \r\n",
      "createdAt": "2024-10-09T13:54:09Z",
      "updatedAt": "2024-10-09T13:54:09Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOLPgbFM6fQCLv",
      "title": "Update WRT NIST's new stuff",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/10",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "NIST will be updating things, slides at https://csrc.nist.gov/csrc/media/Presentations/2024/stateful-hbs-backups-revising-208/images-media/kelsey-hbs-backup-external-nov-2024.pdf",
      "createdAt": "2024-11-19T11:08:28Z",
      "updatedAt": "2024-11-19T11:08:28Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOLPgbFM6rUku2",
      "title": "Comments from Alicja Kario",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/11",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": ">In general, I think abstract and introduction is understating the operational\n>complexity of managing those keys.\n>\n>One thing that I didn't notice, or at least isn't explicit in section 5 is\n>partial state transfer: when we have a device with a state that allows N\n>signatures, if could transfer N/2 signatures to another device and retain\n>the other half. That also provides partial protection against hardware failure.\n>Merging state from two devices is also theoretically possible.\n>\n>The other thing, is I think it would be good to explicitly mention that\n>the state management needs to follow all the ACID properties (atomicity,\n>consistency, isolation, and durability).",
      "createdAt": "2025-02-24T09:16:05Z",
      "updatedAt": "2025-02-24T09:16:05Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 14,
      "id": "I_kwDOLPgbFM6yZMUi",
      "title": "Devices with degrading storage",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/14",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Stefan-Lukas Gazdag wrote:\n\n> Storages are discussed/shown including CDs and USB drives, but what about smartcards? Do you consider them out of scope (and maybe unsuitable for practical use) or do you view them as some kind of HSM? Because smartcards have quite some restrictions on their own and this may be true for other use cases. The RAM is limited and the non-volatile memory wears of. So you need to think about state and memory management. Also see Andreas H\u00fclsing's paper from 2018. At genua we tested JavaCards at some point with similar experiences. A full discussion would be over the top for the Internet-Draft, but you may want to add a note on this.",
      "createdAt": "2025-04-14T12:38:43Z",
      "updatedAt": "2025-04-14T12:38:43Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 15,
      "id": "I_kwDOLPgbFM6yZN34",
      "title": "Elaborating in operational considerations?",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/15",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Stefan-Lukas Gazdag wrote:\n\n> - Operational considerations: A few years ago I took some thought on operating systems and how to make sure there's no copies of the state or old keys left. My conclusion was that you need your whole system to be secure at some point in time because you won't be able to handle all the temporary copies within a modern computer. For examples caches are hell. There quite a few of them. Data stored there is only really written to where it should go if being flushed. You do not necessarily want to flush. You're slowing down the whole system and sometimes things may go wrong. Or your OS just decides that what you want is not what the OS wants. You can't just read a recently written key supposedly written to disk to make sure it's stored, because there may be just some cache (maybe even on the hard disk before the actual write operation on the disk). Sometimes you have to trust that everything's alright or it will get messy.\n\n\nI think the point of this is basically: should we elaborate on the design requirements/environment requirements for secure operations at the OS level?",
      "createdAt": "2025-04-14T12:41:12Z",
      "updatedAt": "2025-04-14T12:41:12Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 16,
      "id": "I_kwDOLPgbFM6yZPM2",
      "title": "Interval-based approaches",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/16",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Stefan-Lukas Gazdag wrote:\n\n> - You can advance the state / key and store it before signing, even for an intervall of keys. E. g. reserve interval u (let's say 100 OTS keys) and store a key before signing where you got rid of all OTS keys that are reserved (forgetting old keys) or advance a PRNG to the seed you need. Which leads to another point:\n>\n> - What about giving up on OTS keys? Using each OTS signing key is only important if you want to proof, that you possess a signature for each OTS key. But  e. g. for the interval approach you could just sacrifice / omit a few (contradicts the last part of chapter four in the Internet-Draft, I think). Imagine the interval in the last point: Your advanced key was written successfully, you start using the OTS keys from the interval that are only stored in volatile memory and suddenly there's a blackout. You restart the system. Worst-case, all keys of your reserved intervall are gone. Bad, but should happen seldomly.\n\nI don't think that this erases all of the state-keeping concerns, but it certainly seems viable as a defense-in-depth approach.  This does mean that you need to increase the size of the tree (potentially significantly) which may erase some of the benefits of stateful hbs.",
      "createdAt": "2025-04-14T12:43:18Z",
      "updatedAt": "2025-04-14T12:43:18Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 18,
      "id": "I_kwDOLPgbFM6_eQSg",
      "title": "\"Soft-fail\" / Warnings when at a certain amount of signatures left",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/issues/18",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Alexander Reilean wrote:\n\n> While reviewing draft-ietf-pquip-hbs-state I understand that it addresses prevention of state reuse, backup management and training operators, but I think it leaves a gap when it comes to warning users before they exhaust the available signatures. People can still drive themselves into a corner if they follow the prescribed procedures.\n>  \n>  \n> Consider a system configured for N=100 signatures. When attempting the N+1 signature, the system returns a \u201csignatures exhausted\u201d error. While this prevents a disaster, the users are already in an operational dead-end because there is no graceful recovery path. Would it be helpful if the system could optionally warn about this a couple of signatures earlier?\n>  \n> I propose extending section 3:\n>  \n> ```\n> Consider providing a configurable warning threshold (M), that is triggered when M signatures remain. When the threshold is reached, the system should return a `signatures nearing exhaustion` error, requiring the user to explicitly acknowledge it in a way that cannot be trivially skipped.\n>  \n> This \u201csoft fail\u201d condition directs attention to the approaching exhaustion while signatures are still available, allowing enough time to initiate key rotation before operations are disrupted.\n>  \n> For flexibility, implementations may allow setting the threshold to M=0 to disable this feature.\n> ```\n>  \n>  \n> The draft could also recommend the layer at which the check should occur, e.g., in the HSM, in the software that uses the HSM, or be a part of a checklist that humans run through. Without explicitly recommending who ought to do it, we might end up in a situation where everyone thought it was someone else\u2019s responsibility. I believe this should happen in the lowest possible layer, so the warning cannot be bypassed by higher-level applications.\n>  \n> Acknowledging this error could be done by setting a configuration parameter or sending a special command to the system. It has to be an action that goes beyond a typical yes/continue/ok that people go through absent-mindedly.\n>  \n> The \u201csoft fail\u201d feature is meant to be a \u201cconstructive annoyance\u201d \u2013 it creates a temporary disruption in order to avoid a catastrophic one.\n>  \n>  \n> Would others find this addition valuable to the draft?\n>\n>p.s. the suggestion is not rooted in experience with running HSMs or secure rooms where these things happen, but rather on a hunch and a background in usability. I'd be particularly interested in hearing from those with operational experience whether they've faced such issues and how they've addressed them.\n\nhttps://mailarchive.ietf.org/arch/msg/pqc/eZw6BfguNtNPDU2A1xURVP7_4DY/\n\n ",
      "createdAt": "2025-07-08T12:33:38Z",
      "updatedAt": "2025-07-08T12:33:38Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOLPgbFM5nRaAu",
      "title": "idnits tool comments",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/1",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-02-19T10:41:46Z",
      "updatedAt": "2024-02-19T10:41:59Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "03f03ef87cd05c1383e4d0d2e36cabd971c05580",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "idnits",
      "headRefOid": "9003756efa3d6746331b3c21975bd44c950bede1",
      "closedAt": "2024-02-19T10:41:58Z",
      "mergedAt": "2024-02-19T10:41:58Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "c891c0cb8c19b562b02a58e8760d868ab8e77ec1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOLPgbFM56PU7B",
      "title": "Make it explicit that key transfer is transactional",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/3",
      "state": "MERGED",
      "author": "kste",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Update the description of key transfer to be more clear that ownership is transferred.",
      "createdAt": "2024-09-03T09:48:28Z",
      "updatedAt": "2024-09-09T12:18:55Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "5e87efae531a86624f4e69607be21b1507875726",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "keytransfer",
      "headRefOid": "aa6149ff08d419e2eb5bc69c3284cf087fe4fd88",
      "closedAt": "2024-09-09T12:18:53Z",
      "mergedAt": "2024-09-09T12:18:53Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "f760492fa4a7d3dd09d3418dda0acd44b612c1cd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6IDyy_",
          "commit": {
            "abbreviatedOid": "aa6149f"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-05T11:54:42Z",
          "updatedAt": "2024-09-05T11:54:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOLPgbFM56PWgY",
      "title": "Avoid keyword for archival procedure guidance",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/4",
      "state": "MERGED",
      "author": "kste",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This document doesn't describe steps on how to update these procedures, and therefore shouldn't use the key word MUST in this context.",
      "createdAt": "2024-09-03T09:51:37Z",
      "updatedAt": "2024-09-09T12:18:11Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "5e87efae531a86624f4e69607be21b1507875726",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "archival-procedures",
      "headRefOid": "c5d39fe49328ea5ef384c3a257a97f7554d0c2af",
      "closedAt": "2024-09-09T12:18:09Z",
      "mergedAt": "2024-09-09T12:18:09Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "ef24a57d18606203d8a9ca4a70c4b0f5105c46db"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6Hu5Jx",
          "commit": {
            "abbreviatedOid": "c5d39fe"
          },
          "author": "crypto4a",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "Looks good to me.",
          "createdAt": "2024-09-03T11:56:26Z",
          "updatedAt": "2024-09-03T11:56:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOLPgbFM56PX98",
      "title": "Clarify perfectly synchronized",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/5",
      "state": "MERGED",
      "author": "kste",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Add explanation on what is meant by perfectly synchronized.",
      "createdAt": "2024-09-03T09:54:12Z",
      "updatedAt": "2024-09-09T12:42:48Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "5e87efae531a86624f4e69607be21b1507875726",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "synchronized",
      "headRefOid": "eb5709bad81f15eeab3ce1e173ee061f21ad4d8d",
      "closedAt": "2024-09-09T12:42:46Z",
      "mergedAt": "2024-09-09T12:42:46Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "d1f70388dbc96731b28e0ca2f837a0996930b1cb"
      },
      "comments": [
        {
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I've pluralized it",
          "createdAt": "2024-09-09T12:34:10Z",
          "updatedAt": "2024-09-09T12:34:10Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6Hu6Xi",
          "commit": {
            "abbreviatedOid": "5cb4af3"
          },
          "author": "crypto4a",
          "authorAssociation": "NONE",
          "state": "CHANGES_REQUESTED",
          "body": "One small nitpick: please change \"during procedure which load\" to \"during procedures which load\". Other than that it looks good to me.",
          "createdAt": "2024-09-03T11:58:48Z",
          "updatedAt": "2024-09-03T11:58:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLPgbFM6Ieyu7",
          "commit": {
            "abbreviatedOid": "5cb4af3"
          },
          "author": "BashiriK",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T12:31:45Z",
          "updatedAt": "2024-09-09T12:31:45Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "As a non-native speaker: du we need \"procedures\" or \"procedure\"",
              "createdAt": "2024-09-09T12:31:45Z",
              "updatedAt": "2024-09-09T12:31:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLPgbFM6IezhQ",
          "commit": {
            "abbreviatedOid": "5cb4af3"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T12:33:11Z",
          "updatedAt": "2024-09-09T12:33:11Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "This should be plural AFAIK",
              "createdAt": "2024-09-09T12:33:11Z",
              "updatedAt": "2024-09-09T12:33:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLPgbFM6IezsC",
          "commit": {
            "abbreviatedOid": "5cb4af3"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T12:33:29Z",
          "updatedAt": "2024-09-09T12:33:29Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "as also pointed out by @crypto4a's comment",
              "createdAt": "2024-09-09T12:33:29Z",
              "updatedAt": "2024-09-09T12:33:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLPgbFM6Ie0lL",
          "commit": {
            "abbreviatedOid": "5cb4af3"
          },
          "author": "BashiriK",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-09T12:34:55Z",
          "updatedAt": "2024-09-09T12:34:55Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Oh, now I see! Feels good to have, independently, the same thoughts as Jim. ",
              "createdAt": "2024-09-09T12:34:55Z",
              "updatedAt": "2024-09-09T12:34:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLPgbFM6Ie2zK",
          "commit": {
            "abbreviatedOid": "eb5709b"
          },
          "author": "BashiriK",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-09T12:38:35Z",
          "updatedAt": "2024-09-09T12:38:35Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOLPgbFM56f5c-",
      "title": "Clarify sector seeds and private key generation.",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/6",
      "state": "MERGED",
      "author": "kste",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-05T09:32:32Z",
      "updatedAt": "2024-09-09T12:18:35Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "8147fbc57313b73e3283c4c58449043dcc336f69",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "sectorseeds",
      "headRefOid": "bbbb8eefde61f964ab44b14589badaf8d4071a5d",
      "closedAt": "2024-09-09T12:18:33Z",
      "mergedAt": "2024-09-09T12:18:33Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "4518a13d61efa7bffe80122c25f3e136a6382b63"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6IDjZo",
          "commit": {
            "abbreviatedOid": "bbbb8ee"
          },
          "author": "crypto4a",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "This looks good to me, thank you for making the changes!",
          "createdAt": "2024-09-05T11:23:17Z",
          "updatedAt": "2024-09-05T11:23:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLPgbFM6IDuAu",
          "commit": {
            "abbreviatedOid": "bbbb8ee"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-05T11:45:33Z",
          "updatedAt": "2024-09-05T11:45:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOLPgbFM57l6AC",
      "title": "Issue #2: When are S-HBS appropriate",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/7",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I've attempted to slightly re-organize and tweak the text in the introduction and added a subheading to (briefly) discuss when S-HBS are perhaps appropriate.\n",
      "createdAt": "2024-09-16T09:13:46Z",
      "updatedAt": "2024-09-24T12:16:54Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "edc6c7958f3339603755a4b9319b82a209fa89c1",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "shbs-appropriate",
      "headRefOid": "a77319795d43087ee1b28b469743bb57bf348ec6",
      "closedAt": "2024-09-24T12:16:51Z",
      "mergedAt": "2024-09-24T12:16:51Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "30373e1ab73f3e7b05ce6b4ef4139f57c447755f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6JdQNk",
          "commit": {
            "abbreviatedOid": "a773197"
          },
          "author": "BashiriK",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-16T09:29:38Z",
          "updatedAt": "2024-09-16T09:38:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLPgbFM6JdQqm",
          "commit": {
            "abbreviatedOid": "a773197"
          },
          "author": "BashiriK",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-16T09:30:35Z",
          "updatedAt": "2024-09-16T09:38:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLPgbFM6JdQyI",
          "commit": {
            "abbreviatedOid": "a773197"
          },
          "author": "BashiriK",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-16T09:30:48Z",
          "updatedAt": "2024-09-16T09:38:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLPgbFM6JdSNX",
          "commit": {
            "abbreviatedOid": "a773197"
          },
          "author": "fluppe2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-16T09:33:54Z",
          "updatedAt": "2024-09-16T09:38:14Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLPgbFM6Jm-BV",
          "commit": {
            "abbreviatedOid": "a773197"
          },
          "author": "kste",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T07:57:19Z",
          "updatedAt": "2024-09-17T07:57:19Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "nit: Let's add the author/date/series info to FIPS205 well.",
              "createdAt": "2024-09-17T07:57:19Z",
              "updatedAt": "2024-09-17T07:57:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLPgbFM6Jm_I6",
          "commit": {
            "abbreviatedOid": "a773197"
          },
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-17T07:58:31Z",
          "updatedAt": "2024-09-17T07:58:31Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "The FIPS204 section has been copy-pasted, so it's there already below the fold.",
              "createdAt": "2024-09-17T07:58:31Z",
              "updatedAt": "2024-09-17T07:58:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOLPgbFM57l7ak",
      "title": "Update FIPS 205 to final",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/8",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-09-16T09:17:00Z",
      "updatedAt": "2024-09-16T22:04:00Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "d1f70388dbc96731b28e0ca2f837a0996930b1cb",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "update-fips",
      "headRefOid": "2d3f9b8aa939c6ece619d9639ec43473e38e5448",
      "closedAt": "2024-09-16T09:23:49Z",
      "mergedAt": "2024-09-16T09:23:49Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "ccf84fee7c3f7f7c6d3756e56bfc38e1bffa326e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6JdNIg",
          "commit": {
            "abbreviatedOid": "2d3f9b8"
          },
          "author": "BashiriK",
          "authorAssociation": "NONE",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-09-16T09:23:11Z",
          "updatedAt": "2024-09-16T09:23:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOLPgbFM6JkBMg",
          "commit": {
            "abbreviatedOid": "2d3f9b8"
          },
          "author": "crypto4a",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "This looks good to me.  Thanks for making the changes!",
          "createdAt": "2024-09-16T22:04:00Z",
          "updatedAt": "2024-09-16T22:04:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOLPgbFM6Q86xc",
      "title": "Update github actions",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/12",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [
        "thomwiggers"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-01T15:19:24Z",
      "updatedAt": "2025-04-01T15:22:01Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "30373e1ab73f3e7b05ce6b4ef4139f57c447755f",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "update-github-actions",
      "headRefOid": "f677df71af85c68102e12219a7d0b836642cef59",
      "closedAt": "2025-04-01T15:21:59Z",
      "mergedAt": "2025-04-01T15:21:59Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "2cd2c9700b7ac066bfc2ca33fddee6a99089d689"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 13,
      "id": "PR_kwDOLPgbFM6SedTV",
      "title": "Fix a typo",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/13",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Thanks Stefan-Lukas for pointing this out",
      "createdAt": "2025-04-14T11:55:32Z",
      "updatedAt": "2025-04-14T19:16:35Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "2cd2c9700b7ac066bfc2ca33fddee6a99089d689",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "typo-SL",
      "headRefOid": "5db26f88640dcdd47db19ad82987b500d98ae2e4",
      "closedAt": "2025-04-14T19:16:32Z",
      "mergedAt": "2025-04-14T19:16:32Z",
      "mergedBy": "fluppe2",
      "mergeCommit": {
        "oid": "658e5c3fde45928977c6e93915a1b0f2efb550b0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6k1Rn8",
          "commit": {
            "abbreviatedOid": "5db26f8"
          },
          "author": "fluppe2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2025-04-14T19:16:18Z",
          "updatedAt": "2025-04-14T19:16:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "PR_kwDOLPgbFM6awXdR",
      "title": "Update draft to adoption status",
      "url": "https://github.com/hbs-guidance/draft-hbs-state/pull/17",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-06-16T17:17:50Z",
      "updatedAt": "2025-06-17T13:18:03Z",
      "baseRepository": "hbs-guidance/draft-hbs-state",
      "baseRefName": "main",
      "baseRefOid": "658e5c3fde45928977c6e93915a1b0f2efb550b0",
      "headRepository": "hbs-guidance/draft-hbs-state",
      "headRefName": "rename",
      "headRefOid": "b9b4976747953ab5687752f120237f8e04050f59",
      "closedAt": "2025-06-17T13:18:02Z",
      "mergedAt": "2025-06-17T13:18:02Z",
      "mergedBy": "thomwiggers",
      "mergeCommit": {
        "oid": "7d35178009798b0fd8782b372b4ba899702f4ff9"
      },
      "comments": [
        {
          "author": "thomwiggers",
          "authorAssociation": "CONTRIBUTOR",
          "body": "A few of the changes to the README were done by an automated script. I will see if I can delete the README and have it be recreated without the duplication.",
          "createdAt": "2025-06-17T10:09:19Z",
          "updatedAt": "2025-06-17T10:09:19Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOLPgbFM6u5tuM",
          "commit": {
            "abbreviatedOid": "a4a7812"
          },
          "author": "kste",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2025-06-17T06:55:09Z",
          "updatedAt": "2025-06-17T06:56:29Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "This section seems to be duplicated?",
              "createdAt": "2025-06-17T06:55:09Z",
              "updatedAt": "2025-06-17T06:56:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLPgbFM6u6Tms",
          "commit": {
            "abbreviatedOid": "a4a7812"
          },
          "author": "fluppe2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-06-17T07:47:44Z",
          "updatedAt": "2025-06-17T07:47:44Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "Yes, I think lines 14-19 need to be deleted.",
              "createdAt": "2025-06-17T07:47:44Z",
              "updatedAt": "2025-06-17T07:47:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOLPgbFM6u6wZ_",
          "commit": {
            "abbreviatedOid": "b001f2f"
          },
          "author": "fluppe2",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Apart of the requested change of @kste it looks good to me.\r\nTook the liberty to update .github/CODEOWNERS, see https://github.com/hbs-guidance/draft-hbs-state/pull/17/commits/b001f2fddaa7c6cd7ec203c448ae40b86ac27778.",
          "createdAt": "2025-06-17T08:21:38Z",
          "updatedAt": "2025-06-17T08:21:38Z",
          "comments": []
        }
      ]
    }
  ]
}